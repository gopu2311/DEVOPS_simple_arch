name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - main

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  BACKEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-backend
  FRONTEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/frontend-app

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Frontend Dependencies
        working-directory: frontend
        run: npm install

      - name: Run Frontend Tests
        working-directory: frontend
        run: npm test -- --watchAll=false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.18'
      - name: Install Backend Dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Backend Tests
        working-directory: ./backend
        run: PYTHONPATH=. pytest tests

  docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${DOCKERHUB_TOKEN}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin

      - name: Build and Push Backend Image
        working-directory: backend
        run: |
          docker build -t $BACKEND_IMAGE:${{ github.sha }} .
          docker push $BACKEND_IMAGE:${{ github.sha }}

      - name: Build and Push Frontend Image
        working-directory: frontend
        run: |
          docker build -t $FRONTEND_IMAGE:${{ github.sha }} .
          docker push $FRONTEND_IMAGE:${{ github.sha }}

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'   
    steps:
      - name: Deploy to AWS (placeholder step)
        run: echo "Trigger your AWS deployment script here"

